/*
 * DungeonGenerator.cpp
 *
 *  Created on: Mar 25, 2013
 *      Author: zerksud
 */

#include "DungeonGenerator.h"

#include <vector>

#include "Registry.h"

#define DEFAULT_DUNGEON_WALL    '#'
#define DEFAULT_DUNGEON_FLOOR   '.'
#define DEFAULT_PLAYER_POS      '@'
#define DEFAULT_MONSTER         'o'

namespace dungeon {
namespace model {

const char* DungeonGenerator::kDefaultDungeon =
"############################################################################################################################"
"############################################################.......#########################################################"
"############################################################.......#########################################################"
"############.........###########################.........###.........#####################.......###################.......#"
"############.#.......###########################.........#########.#.#####################.......###################.......#"
"############.#.......###############.......................#######.#.#####################.......###################.......#"
"############.#.@.o...###############.....#################.#######.#.#####################.......###################.......#"
"##########...#.......###############.....#################.#######.#.......................................................#"
"##########.###.......#####################################.#######.#####################.###################################"
"##########.###.........###################################.#######.#################.....###################################"
"##########.###########.###################################.#######.#################.#######################################"
"##########.###########...#################.........#######.#######.###########.......#######################.........#######"
"##########.#############.#################.........#######.#######.###########.#############################.###.....#######"
"##########.#############.#################...................................................................###.....#######"
"##########.#############.#####################.###########.#######.#############################################.###########"
"##########.#############...###################.###########.#######.#############################################.###########"
"##########.###############.###################.###########.#######.#############################################.###########"
"##########.###############.......#############.###########.#######.#######.......###############################.###########"
"##########.#####################.#############.###########.#######.#######.......###############################.###########"
"######.........#################.###########.......#######.#######.#######.......###############################.###########"
"######.........#################.###########.......#######.#######.#######.......###############################.###########"
"######.........#################...#########.......#######.#######.#######.........................................#########"
"######.........###################.#########.......#######.#######.#######################################.........#########"
"######.........###################.......###.......#######.......#.#######################################.........#########"
"######.........#########################.###.......#######.......#.#######################################.........#########"
"######.........#########################...........#######.........#######################################.........#########"
"##########################################################.......###########################################################"
"##########################################################.......###########################################################"
"############################################################################################################################";

int DungeonGenerator::kDefaultDungeonWidth = 124;
int DungeonGenerator::kDefaultDungeonHeight = 29;

DungeonGenerator::DungeonGenerator() {
}

DungeonGenerator::~DungeonGenerator() {
}

Dungeon* DungeonGenerator::generateDungeon() const {
    CellType* map = new CellType[kDefaultDungeonWidth * kDefaultDungeonHeight];

    std::vector<Position> monsters;

    int w = kDefaultDungeonWidth;
    int h = kDefaultDungeonHeight;
    int startPositionX = 0;
    int startPositionY = 0;
    for (int y = 0; y < h; ++y) {
        for (int x = 0; x < w; ++x) {
            int index = y * w + x;
            CellType cell = WALL;

            const char cellChar = kDefaultDungeon[index];
            if (cellChar == DEFAULT_DUNGEON_FLOOR ||
                    cellChar == DEFAULT_PLAYER_POS ||
                    cellChar == DEFAULT_MONSTER) {
                cell = FLOOR;
            }

            map[index] = cell;

            if (cellChar == DEFAULT_PLAYER_POS) {
                startPositionX = x;
                startPositionY = y;
            }

            if (cellChar == DEFAULT_MONSTER) {
                monsters.push_back(Position(x, y));
            }
        }
    }
    Position startPosition(startPositionX, startPositionY);

    Dungeon* dungeon = new Dungeon(kDefaultDungeonWidth, kDefaultDungeonHeight, map, startPosition);

    for (Position& monsterPos : monsters) {
        Monster* monster = new Monster();
        Registry::getInstance().assignUniqueId(monster);
        monster->setPosition(monsterPos);

        dungeon->placeMonster(monster);
    }

    return dungeon;
}

} /* namespace model */
} /* namespace dungeon */
